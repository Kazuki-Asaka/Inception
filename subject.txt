このプロジェクトは、特定のルールのもと、さまざまなサービスで構成される小規模なインフラストラクチャを構築するものである。
プロジェクト全体は仮想マシン上で行わなければならない。docker composeを使う必要がある。

各Dockerイメージは、対応するサービスと同じ名前でなければなりません。
各サービスは専用のコンテナで実行する必要があります。
パフォーマンスの観点から、コンテナはAlpineまたはDebianの最新安定版からビルドする必要があります。選択はあなた次第だ。
また、各サービスに1つずつ、独自のDockerfileを記述する必要があります。Dockerfileはdocker-compose.ymlでMakefileから呼び出されなければなりません。
つまり、プロジェクトのDockerイメージを自分でビルドしなければならない。
そして、DockerHubのようなサービス（Alpine/Debianはこのルールから除外されている）を使うだけでなく、既製のDockerイメージを引っ張ってくることも禁じられている。


それからセットアップをする
- TLSv1.2またはTLSv1.3のみのNGINXを含むDockerコンテナ。
- WordPressとphp-fpm（インストールと設定が必要）を含むDockerコンテナで、nginxは含まれていません。
- nginxを使わずにMariaDBだけを入れたDockerコンテナ。
- WordPressデータベースを含むボリューム。
- WordPressウェブサイトのファイルを格納する2番目のボリューム。
- コンテナ間の接続を確立するdocker-network。クラッシュした場合はコンテナを再起動する必要があります。

Dockerコンテナは仮想マシンではない。従って、これを実行しようとする場合、'tail -f'などに基づくハッキーなパッチを使うことは推奨されない。
デーモンがどのように機能するのか、デーモンを使用するのは良い考えなのか、そうでないのかについてお読みください。

もちろん、network: hostや-link、links: を使うことは禁じられている。
dockerのcompose.ymlファイルにnetwork行がなければならない。
無限ループを実行するコマンドでコンテナを起動してはならない。
したがって、エントリーポイントとして使用されるコマンドや、エントリーポイントのスクリプトで使用されるコマンドにも適用される。
以下は、いくつか禁止されているハッキーなパッチである：tail -f、bash、sleep infinity、while true。

PID 1とDockerfileの書き方のベストプラクティスについてお読みください。

WordPressのデータベースには、2人のユーザーが存在し、そのうちの1人は広告管理者で
なければなりません。
管理者のユーザー名にadmin/Adminやadmin- istrator/Administratorを含めることはできません（例：admin、administrator、Administrator、admin-123など）。

あなたのボリュームは、Dockerを使ってホスト・マシンの/home/login/dataフォルダで利用できるようになる。
もちろん、ログインを自分のものに置き換える必要がある。

物事を簡単にするために、ドメイン名があなたのローカルIPアドレスを指すように設定しなければならない。 
このドメイン名はlogin.42.frでなければなりません。例えば、ログイン名がwilの場合、wil.42.frはwilのウェブサイトを指すIPアドレスにリダイレクトされます。

最新のタグは禁止されている。
Dockerfilesにパスワードがあってはならない。
環境変数の使用は必須である。
また、環境変数を保存するために.envファイルを使用することを強くお勧めします。 .envファイルはsrcsディレクトリのルート
に置くべきである。
NGINXコンテナは、TLSv1.2またはTLSv1.3プロトコルを使用して、ポート443のみを介してインフラストラクチャへの唯一のエントリポイントでなければなりません。
プロトコルを使用します。

mariaDB
https://qiita.com/ryhara/items/0581c03e82bd84c54a6f
https://qiita.com/ydah/items/528aefd1a1cab51285c3
https://qiita.com/inosy22/items/341cfc589494b8211844
https://docs.redhat.com/ja/documentation/red_hat_enterprise_linux/6/html/deployment_guide/s1-services-running
https://linuc.org/study/knowledge/514/


WordPress
https://kinsta.com/jp/knowledgebase/what-is-php/
https://make.wordpress.org/cli/handbook/guides/installing/
https://www.tecmint.com/install-wordpress-alongside-lamp-on-debian-10/
https://geekrewind.com/install-wordpress-on-ubuntu-16-04-lts-with-lighttpd-mariadb-and-php-7-1-support/
https://ja.wordpress.org/support/article/editing-wp-config-php/
https://zenn.dev/hisamitsu/articles/8388214d4ab0f3

https://blog.mmmcorp.co.jp/2022/05/10/wordpress-wp-cli/
https://qiita.com/IK12_info/items/4a9190119be2a0f347a0
https://developer.wordpress.org/cli/commands/config/
https://developer.wordpress.org/cli/commands/core/install/

nginx
https://qiita.com/ponponnsan/items/23e1aa6f7dd4eadde5df
https://qiita.com/hashiguchi1544/items/0cf5eebb3ae72b618ece

https://nginx.org/en/docs/beginners_guide.html
https://nginx.org/en/docs/dirindex.html

https://qiita.com/1104crf14/items/f260595da3767ade3a73
https://qiita.com/kotarella1110/items/634f6fafeb33ae0f51dc

akazuki.42.fr/php/index.html